<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="CClientSocket_8cpp" kind="file" language="C++">
    <compoundname>CClientSocket.cpp</compoundname>
    <includes refid="CClientSocket_8h" local="yes">CClientSocket.h</includes>
    <includes refid="CDBSocket_8h" local="yes">CDBSocket.h</includes>
    <includes refid="CMacroDB_8h" local="yes">../Macro/CMacroDB.h</includes>
    <includes refid="CMap_8h" local="yes">../Map/CMap.h</includes>
    <includes refid="CNPC_8h" local="yes">../GameCharacter/CNPC.h</includes>
    <incdepgraph>
      <node id="2207">
        <label>list</label>
      </node>
      <node id="2220">
        <label>../GameCharacter/CNPC.h</label>
        <link refid="CNPC_8h_source"/>
        <childnode refid="2173" relation="include">
        </childnode>
        <childnode refid="2205" relation="include">
        </childnode>
      </node>
      <node id="2202">
        <label>../GameCharacter/CPlayer.h</label>
        <link refid="CPlayer_8h_source"/>
        <childnode refid="2177" relation="include">
        </childnode>
        <childnode refid="2203" relation="include">
        </childnode>
        <childnode refid="2204" relation="include">
        </childnode>
        <childnode refid="2173" relation="include">
        </childnode>
        <childnode refid="2205" relation="include">
        </childnode>
        <childnode refid="2208" relation="include">
        </childnode>
        <childnode refid="2214" relation="include">
        </childnode>
        <childnode refid="2215" relation="include">
        </childnode>
      </node>
      <node id="2195">
        <label>stdarg.h</label>
      </node>
      <node id="2176">
        <label>netinet/in.h</label>
      </node>
      <node id="2187">
        <label>Protocol/MainProtocol.h</label>
        <link refid="MainProtocol_8h_source"/>
      </node>
      <node id="2209">
        <label>../Macro/CMacroDB.h</label>
        <link refid="CMacroDB_8h_source"/>
        <childnode refid="2190" relation="include">
        </childnode>
        <childnode refid="2197" relation="include">
        </childnode>
        <childnode refid="2196" relation="include">
        </childnode>
        <childnode refid="2210" relation="include">
        </childnode>
        <childnode refid="2211" relation="include">
        </childnode>
        <childnode refid="2213" relation="include">
        </childnode>
      </node>
      <node id="2179">
        <label>stdlib.h</label>
      </node>
      <node id="2205">
        <label>CCharacter.h</label>
        <link refid="CCharacter_8h_source"/>
        <childnode refid="2177" relation="include">
        </childnode>
        <childnode refid="2191" relation="include">
        </childnode>
        <childnode refid="2206" relation="include">
        </childnode>
        <childnode refid="2207" relation="include">
        </childnode>
        <childnode refid="2190" relation="include">
        </childnode>
        <childnode refid="2181" relation="include">
        </childnode>
        <childnode refid="2198" relation="include">
        </childnode>
        <childnode refid="2193" relation="include">
        </childnode>
        <childnode refid="2173" relation="include">
        </childnode>
        <childnode refid="2183" relation="include">
        </childnode>
        <childnode refid="2194" relation="include">
        </childnode>
        <childnode refid="2187" relation="include">
        </childnode>
        <childnode refid="2184" relation="include">
        </childnode>
        <childnode refid="2188" relation="include">
        </childnode>
      </node>
      <node id="2193">
        <label>cstdarg</label>
      </node>
      <node id="2177">
        <label>string</label>
      </node>
      <node id="2184">
        <label>minwindef.h</label>
        <link refid="minwindef_8h_source"/>
        <childnode refid="2185" relation="include">
        </childnode>
        <childnode refid="2186" relation="include">
        </childnode>
      </node>
      <node id="2190">
        <label>map</label>
      </node>
      <node id="2200">
        <label>synchronized.h</label>
        <link refid="synchronized_8h_source"/>
        <childnode refid="2191" relation="include">
        </childnode>
      </node>
      <node id="2196">
        <label>fstream</label>
      </node>
      <node id="2188">
        <label>common.h</label>
        <link refid="common_8h_source"/>
      </node>
      <node id="2208">
        <label>../Item/CItem.h</label>
        <link refid="CItem_8h_source"/>
        <childnode refid="2190" relation="include">
        </childnode>
        <childnode refid="2181" relation="include">
        </childnode>
        <childnode refid="2191" relation="include">
        </childnode>
        <childnode refid="2184" relation="include">
        </childnode>
        <childnode refid="2188" relation="include">
        </childnode>
        <childnode refid="2198" relation="include">
        </childnode>
        <childnode refid="2209" relation="include">
        </childnode>
      </node>
      <node id="2180">
        <label>pthread.h</label>
      </node>
      <node id="2174">
        <label>sys/types.h</label>
      </node>
      <node id="2173">
        <label>string.h</label>
      </node>
      <node id="2183">
        <label>Protocol/Packet.h</label>
        <link refid="Packet_8h_source"/>
        <childnode refid="2184" relation="include">
        </childnode>
      </node>
      <node id="2199">
        <label>cstdio</label>
      </node>
      <node id="2192">
        <label>CClient.h</label>
        <link refid="CClient_8h_source"/>
        <childnode refid="2177" relation="include">
        </childnode>
        <childnode refid="2191" relation="include">
        </childnode>
        <childnode refid="2193" relation="include">
        </childnode>
        <childnode refid="2173" relation="include">
        </childnode>
        <childnode refid="2181" relation="include">
        </childnode>
        <childnode refid="2183" relation="include">
        </childnode>
        <childnode refid="2187" relation="include">
        </childnode>
        <childnode refid="2194" relation="include">
        </childnode>
        <childnode refid="2184" relation="include">
        </childnode>
        <childnode refid="2188" relation="include">
        </childnode>
        <childnode refid="2198" relation="include">
        </childnode>
        <childnode refid="2201" relation="include">
        </childnode>
        <childnode refid="2202" relation="include">
        </childnode>
      </node>
      <node id="2214">
        <label>CMonster.h</label>
        <link refid="CMonster_8h_source"/>
        <childnode refid="2205" relation="include">
        </childnode>
        <childnode refid="2209" relation="include">
        </childnode>
      </node>
      <node id="2181">
        <label>unistd.h</label>
      </node>
      <node id="2215">
        <label>CParty.h</label>
        <link refid="CParty_8h_source"/>
        <childnode refid="2190" relation="include">
        </childnode>
        <childnode refid="2181" relation="include">
        </childnode>
        <childnode refid="2191" relation="include">
        </childnode>
        <childnode refid="2207" relation="include">
        </childnode>
        <childnode refid="2216" relation="include">
        </childnode>
        <childnode refid="2198" relation="include">
        </childnode>
        <childnode refid="2183" relation="include">
        </childnode>
        <childnode refid="2194" relation="include">
        </childnode>
        <childnode refid="2203" relation="include">
        </childnode>
        <childnode refid="2204" relation="include">
        </childnode>
        <childnode refid="2173" relation="include">
        </childnode>
        <childnode refid="2217" relation="include">
        </childnode>
        <childnode refid="2202" relation="include">
        </childnode>
      </node>
      <node id="2216">
        <label>vector</label>
      </node>
      <node id="2182">
        <label>signal.h</label>
      </node>
      <node id="2189">
        <label>../CServer.h</label>
        <link refid="MainServer_2CServer_8h_source"/>
        <childnode refid="2190" relation="include">
        </childnode>
        <childnode refid="2191" relation="include">
        </childnode>
        <childnode refid="2184" relation="include">
        </childnode>
        <childnode refid="2192" relation="include">
        </childnode>
        <childnode refid="2202" relation="include">
        </childnode>
        <childnode refid="2214" relation="include">
        </childnode>
        <childnode refid="2215" relation="include">
        </childnode>
        <childnode refid="2218" relation="include">
        </childnode>
      </node>
      <node id="2219">
        <label>CTile.h</label>
        <link refid="CTile_8h_source"/>
        <childnode refid="2191" relation="include">
        </childnode>
        <childnode refid="2206" relation="include">
        </childnode>
        <childnode refid="2202" relation="include">
        </childnode>
        <childnode refid="2220" relation="include">
        </childnode>
        <childnode refid="2214" relation="include">
        </childnode>
      </node>
      <node id="2197">
        <label>sstream</label>
      </node>
      <node id="2213">
        <label>CMonsterInfo.h</label>
        <link refid="CMonsterInfo_8h_source"/>
        <childnode refid="2212" relation="include">
        </childnode>
      </node>
      <node id="2186">
        <label>time.h</label>
      </node>
      <node id="2206">
        <label>math.h</label>
      </node>
      <node id="2204">
        <label>cstdlib</label>
      </node>
      <node id="2211">
        <label>CItemInfo.h</label>
        <link refid="CItemInfo_8h_source"/>
        <childnode refid="2212" relation="include">
        </childnode>
      </node>
      <node id="2210">
        <label>TinyXML2/tinyxml2.h</label>
      </node>
      <node id="2172">
        <label>CClientSocket.h</label>
        <link refid="CClientSocket_8h_source"/>
        <childnode refid="2173" relation="include">
        </childnode>
        <childnode refid="2174" relation="include">
        </childnode>
        <childnode refid="2175" relation="include">
        </childnode>
        <childnode refid="2176" relation="include">
        </childnode>
        <childnode refid="2177" relation="include">
        </childnode>
        <childnode refid="2178" relation="include">
        </childnode>
        <childnode refid="2179" relation="include">
        </childnode>
        <childnode refid="2180" relation="include">
        </childnode>
        <childnode refid="2181" relation="include">
        </childnode>
        <childnode refid="2182" relation="include">
        </childnode>
        <childnode refid="2183" relation="include">
        </childnode>
        <childnode refid="2187" relation="include">
        </childnode>
        <childnode refid="2184" relation="include">
        </childnode>
        <childnode refid="2188" relation="include">
        </childnode>
        <childnode refid="2189" relation="include">
        </childnode>
      </node>
      <node id="2201">
        <label>Socket/CDBSocket.h</label>
        <link refid="CDBSocket_8h_source"/>
        <childnode refid="2173" relation="include">
        </childnode>
        <childnode refid="2174" relation="include">
        </childnode>
        <childnode refid="2175" relation="include">
        </childnode>
        <childnode refid="2176" relation="include">
        </childnode>
        <childnode refid="2177" relation="include">
        </childnode>
        <childnode refid="2178" relation="include">
        </childnode>
        <childnode refid="2179" relation="include">
        </childnode>
        <childnode refid="2180" relation="include">
        </childnode>
        <childnode refid="2181" relation="include">
        </childnode>
        <childnode refid="2183" relation="include">
        </childnode>
        <childnode refid="2187" relation="include">
        </childnode>
        <childnode refid="2184" relation="include">
        </childnode>
        <childnode refid="2188" relation="include">
        </childnode>
        <childnode refid="2192" relation="include">
        </childnode>
        <childnode refid="2202" relation="include">
        </childnode>
      </node>
      <node id="2191">
        <label>mutex</label>
      </node>
      <node id="2218">
        <label>Map/CMap.h</label>
        <link refid="CMap_8h_source"/>
        <childnode refid="2219" relation="include">
        </childnode>
      </node>
      <node id="2175">
        <label>sys/socket.h</label>
      </node>
      <node id="2171">
        <label>MainServer/Socket/CClientSocket.cpp</label>
        <link refid="CClientSocket_8cpp"/>
        <childnode refid="2172" relation="include">
        </childnode>
        <childnode refid="2201" relation="include">
        </childnode>
        <childnode refid="2209" relation="include">
        </childnode>
        <childnode refid="2218" relation="include">
        </childnode>
        <childnode refid="2220" relation="include">
        </childnode>
      </node>
      <node id="2198">
        <label>access.h</label>
        <link refid="access_8h_source"/>
        <childnode refid="2199" relation="include">
        </childnode>
        <childnode refid="2200" relation="include">
        </childnode>
        <childnode refid="2184" relation="include">
        </childnode>
      </node>
      <node id="2217">
        <label>algorithm</label>
      </node>
      <node id="2178">
        <label>stdio.h</label>
      </node>
      <node id="2203">
        <label>cstring</label>
      </node>
      <node id="2212">
        <label>CMacro.h</label>
        <link refid="CMacro_8h_source"/>
        <childnode refid="2184" relation="include">
        </childnode>
        <childnode refid="2188" relation="include">
        </childnode>
      </node>
      <node id="2185">
        <label>inttypes.h</label>
      </node>
      <node id="2194">
        <label>Socket/CSocket.h</label>
        <link refid="CSocket_8h_source"/>
        <childnode refid="2195" relation="include">
        </childnode>
        <childnode refid="2173" relation="include">
        </childnode>
        <childnode refid="2174" relation="include">
        </childnode>
        <childnode refid="2175" relation="include">
        </childnode>
        <childnode refid="2176" relation="include">
        </childnode>
        <childnode refid="2178" relation="include">
        </childnode>
        <childnode refid="2196" relation="include">
        </childnode>
        <childnode refid="2197" relation="include">
        </childnode>
        <childnode refid="2183" relation="include">
        </childnode>
        <childnode refid="2187" relation="include">
        </childnode>
        <childnode refid="2184" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;CClientSocket.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;CDBSocket.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Macro/CMacroDB.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Map/CMap.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../GameCharacter/CNPC.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal">SOCKET<sp/>CClientSocket::g_pSocket<sp/>=<sp/>INVALID_SOCKET;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>CClientSocket::Start(WORD<sp/>wPort)</highlight></codeline>
<codeline lineno="10"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/>CClientSocket::g_pSocket<sp/>=<sp/>socket(AF_INET,<sp/>SOCK_STREAM,<sp/>0);</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CClientSocket::g_pSocket<sp/>&lt;=<sp/>INVALID_SOCKET)<sp/>{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(KRED<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>creating<sp/>socket.\n&quot;</highlight><highlight class="normal"><sp/>KNRM);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sockaddr_in<sp/>serv_addr;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(&amp;serv_addr,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(sockaddr_in));</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>serv_addr.sin_family<sp/>=<sp/>AF_INET;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>serv_addr.sin_addr.s_addr<sp/>=<sp/>INADDR_ANY;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>serv_addr.sin_port<sp/>=<sp/>htons(wPort);</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bind(CClientSocket::g_pSocket,<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sockaddr<sp/>*)&amp;serv_addr,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(serv_addr))<sp/>&lt;=<sp/>SOCKET_ERROR)<sp/>{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(KRED<sp/></highlight><highlight class="stringliteral">&quot;Bind<sp/>failed.\n&quot;</highlight><highlight class="normal"><sp/>KNRM);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(listen(CClientSocket::g_pSocket,<sp/>5)<sp/>&lt;=<sp/>SOCKET_ERROR)<sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(KRED<sp/></highlight><highlight class="stringliteral">&quot;Error<sp/>listening<sp/>on<sp/>socket.\n&quot;</highlight><highlight class="normal"><sp/>KNRM);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sigaction<sp/>sigIntHandler;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>sigIntHandler.sa_handler<sp/>=<sp/>CClientSocket::Close;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>sigemptyset(&amp;sigIntHandler.sa_mask);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>sigIntHandler.sa_flags<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>sigaction(SIGINT,<sp/>&amp;sigIntHandler,<sp/>NULL);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CClientSocket::Close(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="44"><highlight class="normal">{</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\nAbout<sp/>to<sp/>send<sp/>all<sp/>player<sp/>property...\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>CServer::g_mxClient.lock();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">auto</highlight><highlight class="normal">&amp;<sp/>a:<sp/>CServer::g_mClient)</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CClient<sp/>*pClient<sp/>=<sp/>a.second;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pClient-&gt;m_Access.Grant();</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pClient-&gt;GetPlayer())<sp/>{</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CPlayer<sp/>*pPlayer<sp/>=<sp/>pClient-&gt;GetPlayer();</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pPlayer-&gt;m_Access.Grant();</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pPlayer-&gt;SaveAllProperty();</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pPlayer-&gt;m_Access.Release();</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pClient-&gt;m_Access.Release();</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>CServer::g_mxClient.unlock();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Property<sp/>sent.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>CServer::EmptyClient();</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>close(CClientSocket::g_pSocket);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>CMacroDB::UnloadInitItem();</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>CMap::UnloadMaps();</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCNPC_1a3654caa12b148bb1242924e9d92e9712" kindref="member">CNPC::UnloadNPC</ref>();</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="77"><highlight class="normal">}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CClientSocket::Accept()</highlight></codeline>
<codeline lineno="80"><highlight class="normal">{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(CClientSocket::g_pSocket<sp/>==<sp/>INVALID_SOCKET)</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SOCKET<sp/>*client<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>SOCKET;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*client<sp/>=<sp/>INVALID_SOCKET;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(*client<sp/>==<sp/>INVALID_SOCKET)</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*client<sp/>=<sp/>accept(CClientSocket::g_pSocket,<sp/>NULL,<sp/>NULL);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pthread_t<sp/>t;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pthread_create(&amp;t,<sp/>NULL,<sp/>&amp;CClientSocket::Await,<sp/>(PVOID)client)<sp/>!=<sp/>THREAD_SUCCESS)<sp/></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(KRED<sp/></highlight><highlight class="stringliteral">&quot;ERROR:<sp/>Couldn&apos;t<sp/>start<sp/>thread.\n&quot;</highlight><highlight class="normal"><sp/>KNRM);</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>client;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal">}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal">PVOID<sp/>CClientSocket::Await(PVOID<sp/>param)</highlight></codeline>
<codeline lineno="102"><highlight class="normal">{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>CClient<sp/>*pClient<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>CClient(*(SOCKET*)param);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>(SOCKET*)param;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Client[%d]<sp/>connected.\n&quot;</highlight><highlight class="normal">,<sp/>pClient-&gt;GetCID());</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>CServer::Add(pClient);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PACKETBUFFER<sp/>buffer;</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(&amp;buffer,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(PACKETBUFFER));</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nLen<sp/>=<sp/>recv(pClient-&gt;GetCID(),<sp/>&amp;buffer,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(PACKETBUFFER),<sp/>0);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nLen<sp/>&lt;=<sp/>0)<sp/>{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Client[%d]<sp/>disconnected.\n&quot;</highlight><highlight class="normal">,<sp/>pClient-&gt;GetCID());</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nClientDescriptor<sp/>=<sp/>pClient-&gt;GetCID();</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CDBSocket::Write(S2D_DISCONNECT,<sp/></highlight><highlight class="stringliteral">&quot;d&quot;</highlight><highlight class="normal">,<sp/>pClient-&gt;GetCID());</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CServer::Remove(pClient);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close(nClientDescriptor);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nLen<sp/>&gt;<sp/>MAX_PACKET_LENGTH)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Cut<sp/>buffer<sp/>into<sp/>packets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*p<sp/>=<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;buffer;</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(nLen<sp/>&gt;<sp/>0<sp/>&amp;&amp;<sp/>nLen<sp/>&gt;=<sp/>*(WORD*)p)<sp/></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Packet<sp/>packet;</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memset(&amp;packet,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Packet));</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(&amp;packet,<sp/>p,<sp/>*(WORD*)p);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DebugRawPacket(packet);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pClient-&gt;Process(packet);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nLen<sp/>-=<sp/>*(WORD*)p;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/>+=<sp/>*(WORD*)p;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_detach(pthread_self());</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>CClientSocket::DebugRawPacket(Packet&amp;<sp/>packet)</highlight></codeline>
<codeline lineno="152"><highlight class="normal">{</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(packet.byType<sp/>==<sp/>C2S_MOVE_ON)</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(packet.byType<sp/>==<sp/>C2S_MOVE_END)</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;Incoming<sp/>C2S<sp/>packet:<sp/>[%u]\n&quot;</highlight><highlight class="normal">,<sp/>(BYTE)packet.byType);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>packet.wSize;<sp/>i++)</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;%u<sp/>&quot;</highlight><highlight class="normal">,<sp/>(BYTE)((</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*)&amp;packet)[i]);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="162"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="MainServer/Socket/CClientSocket.cpp"/>
  </compounddef>
</doxygen>
