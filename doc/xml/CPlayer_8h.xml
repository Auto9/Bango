<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="CPlayer_8h" kind="file" language="C++">
    <compoundname>CPlayer.h</compoundname>
    <includes local="no">string</includes>
    <includes local="no">cstring</includes>
    <includes local="no">cstdlib</includes>
    <includes local="no">string.h</includes>
    <includes refid="CCharacter_8h" local="yes">CCharacter.h</includes>
    <includes refid="CItem_8h" local="yes">../Item/CItem.h</includes>
    <includes refid="CMonster_8h" local="yes">CMonster.h</includes>
    <includes refid="CParty_8h" local="yes">CParty.h</includes>
    <includedby refid="CDBSocket_8h" local="yes">MainServer/Socket/CDBSocket.h</includedby>
    <includedby refid="CParty_8h" local="yes">MainServer/GameCharacter/CParty.h</includedby>
    <includedby refid="CClient_8h" local="yes">MainServer/CClient.h</includedby>
    <includedby refid="MainServer_2CServer_8h" local="yes">MainServer/CServer.h</includedby>
    <includedby refid="CTile_8h" local="yes">MainServer/Map/CTile.h</includedby>
    <includedby refid="CMonster_8cpp" local="yes">MainServer/GameCharacter/CMonster.cpp</includedby>
    <includedby refid="CPlayer_8cpp" local="yes">MainServer/GameCharacter/CPlayer.cpp</includedby>
    <includedby refid="CItem_8cpp" local="yes">MainServer/Item/CItem.cpp</includedby>
    <includedby refid="CItemDefense_8cpp" local="yes">MainServer/Item/CItemDefense.cpp</includedby>
    <includedby refid="CItemGeneral_8cpp" local="yes">MainServer/Item/CItemGeneral.cpp</includedby>
    <includedby refid="CItemOrnament_8cpp" local="yes">MainServer/Item/CItemOrnament.cpp</includedby>
    <includedby refid="CItemPet_8cpp" local="yes">MainServer/Item/CItemPet.cpp</includedby>
    <includedby refid="CItemRide_8cpp" local="yes">MainServer/Item/CItemRide.cpp</includedby>
    <includedby refid="CItemTransform_8cpp" local="yes">MainServer/Item/CItemTransform.cpp</includedby>
    <includedby refid="CItemWeapon_8cpp" local="yes">MainServer/Item/CItemWeapon.cpp</includedby>
    <includedby refid="CItemYinyang_8cpp" local="yes">MainServer/Item/CItemYinyang.cpp</includedby>
    <incdepgraph>
      <node id="1062">
        <label>list</label>
      </node>
      <node id="1054">
        <label>MainServer/GameCharacter/CPlayer.h</label>
        <link refid="CPlayer_8h"/>
        <childnode refid="1055" relation="include">
        </childnode>
        <childnode refid="1056" relation="include">
        </childnode>
        <childnode refid="1057" relation="include">
        </childnode>
        <childnode refid="1058" relation="include">
        </childnode>
        <childnode refid="1059" relation="include">
        </childnode>
        <childnode refid="1083" relation="include">
        </childnode>
        <childnode refid="1089" relation="include">
        </childnode>
        <childnode refid="1090" relation="include">
        </childnode>
      </node>
      <node id="1074">
        <label>stdarg.h</label>
      </node>
      <node id="1077">
        <label>netinet/in.h</label>
      </node>
      <node id="1081">
        <label>Protocol/MainProtocol.h</label>
        <link refid="MainProtocol_8h_source"/>
      </node>
      <node id="1084">
        <label>../Macro/CMacroDB.h</label>
        <link refid="CMacroDB_8h_source"/>
        <childnode refid="1063" relation="include">
        </childnode>
        <childnode refid="1080" relation="include">
        </childnode>
        <childnode refid="1079" relation="include">
        </childnode>
        <childnode refid="1085" relation="include">
        </childnode>
        <childnode refid="1086" relation="include">
        </childnode>
        <childnode refid="1088" relation="include">
        </childnode>
      </node>
      <node id="1059">
        <label>CCharacter.h</label>
        <link refid="CCharacter_8h_source"/>
        <childnode refid="1055" relation="include">
        </childnode>
        <childnode refid="1060" relation="include">
        </childnode>
        <childnode refid="1061" relation="include">
        </childnode>
        <childnode refid="1062" relation="include">
        </childnode>
        <childnode refid="1063" relation="include">
        </childnode>
        <childnode refid="1064" relation="include">
        </childnode>
        <childnode refid="1065" relation="include">
        </childnode>
        <childnode refid="1071" relation="include">
        </childnode>
        <childnode refid="1058" relation="include">
        </childnode>
        <childnode refid="1072" relation="include">
        </childnode>
        <childnode refid="1073" relation="include">
        </childnode>
        <childnode refid="1081" relation="include">
        </childnode>
        <childnode refid="1068" relation="include">
        </childnode>
        <childnode refid="1082" relation="include">
        </childnode>
      </node>
      <node id="1071">
        <label>cstdarg</label>
      </node>
      <node id="1055">
        <label>string</label>
      </node>
      <node id="1068">
        <label>minwindef.h</label>
        <link refid="minwindef_8h_source"/>
        <childnode refid="1069" relation="include">
        </childnode>
        <childnode refid="1070" relation="include">
        </childnode>
      </node>
      <node id="1063">
        <label>map</label>
      </node>
      <node id="1067">
        <label>synchronized.h</label>
        <link refid="synchronized_8h_source"/>
        <childnode refid="1060" relation="include">
        </childnode>
      </node>
      <node id="1079">
        <label>fstream</label>
      </node>
      <node id="1082">
        <label>common.h</label>
        <link refid="common_8h_source"/>
      </node>
      <node id="1083">
        <label>../Item/CItem.h</label>
        <link refid="CItem_8h_source"/>
        <childnode refid="1063" relation="include">
        </childnode>
        <childnode refid="1064" relation="include">
        </childnode>
        <childnode refid="1060" relation="include">
        </childnode>
        <childnode refid="1068" relation="include">
        </childnode>
        <childnode refid="1082" relation="include">
        </childnode>
        <childnode refid="1065" relation="include">
        </childnode>
        <childnode refid="1084" relation="include">
        </childnode>
      </node>
      <node id="1075">
        <label>sys/types.h</label>
      </node>
      <node id="1058">
        <label>string.h</label>
      </node>
      <node id="1072">
        <label>Protocol/Packet.h</label>
        <link refid="Packet_8h_source"/>
        <childnode refid="1068" relation="include">
        </childnode>
      </node>
      <node id="1066">
        <label>cstdio</label>
      </node>
      <node id="1089">
        <label>CMonster.h</label>
        <link refid="CMonster_8h_source"/>
        <childnode refid="1059" relation="include">
        </childnode>
        <childnode refid="1084" relation="include">
        </childnode>
      </node>
      <node id="1064">
        <label>unistd.h</label>
      </node>
      <node id="1090">
        <label>CParty.h</label>
        <link refid="CParty_8h_source"/>
        <childnode refid="1063" relation="include">
        </childnode>
        <childnode refid="1064" relation="include">
        </childnode>
        <childnode refid="1060" relation="include">
        </childnode>
        <childnode refid="1062" relation="include">
        </childnode>
        <childnode refid="1091" relation="include">
        </childnode>
        <childnode refid="1065" relation="include">
        </childnode>
        <childnode refid="1072" relation="include">
        </childnode>
        <childnode refid="1073" relation="include">
        </childnode>
        <childnode refid="1056" relation="include">
        </childnode>
        <childnode refid="1057" relation="include">
        </childnode>
        <childnode refid="1058" relation="include">
        </childnode>
        <childnode refid="1092" relation="include">
        </childnode>
        <childnode refid="1054" relation="include">
        </childnode>
      </node>
      <node id="1091">
        <label>vector</label>
      </node>
      <node id="1080">
        <label>sstream</label>
      </node>
      <node id="1088">
        <label>CMonsterInfo.h</label>
        <link refid="CMonsterInfo_8h_source"/>
        <childnode refid="1087" relation="include">
        </childnode>
      </node>
      <node id="1070">
        <label>time.h</label>
      </node>
      <node id="1061">
        <label>math.h</label>
      </node>
      <node id="1057">
        <label>cstdlib</label>
      </node>
      <node id="1086">
        <label>CItemInfo.h</label>
        <link refid="CItemInfo_8h_source"/>
        <childnode refid="1087" relation="include">
        </childnode>
      </node>
      <node id="1085">
        <label>TinyXML2/tinyxml2.h</label>
      </node>
      <node id="1060">
        <label>mutex</label>
      </node>
      <node id="1076">
        <label>sys/socket.h</label>
      </node>
      <node id="1065">
        <label>access.h</label>
        <link refid="access_8h_source"/>
        <childnode refid="1066" relation="include">
        </childnode>
        <childnode refid="1067" relation="include">
        </childnode>
        <childnode refid="1068" relation="include">
        </childnode>
      </node>
      <node id="1092">
        <label>algorithm</label>
      </node>
      <node id="1078">
        <label>stdio.h</label>
      </node>
      <node id="1056">
        <label>cstring</label>
      </node>
      <node id="1087">
        <label>CMacro.h</label>
        <link refid="CMacro_8h_source"/>
        <childnode refid="1068" relation="include">
        </childnode>
        <childnode refid="1082" relation="include">
        </childnode>
      </node>
      <node id="1069">
        <label>inttypes.h</label>
      </node>
      <node id="1073">
        <label>Socket/CSocket.h</label>
        <link refid="CSocket_8h_source"/>
        <childnode refid="1074" relation="include">
        </childnode>
        <childnode refid="1058" relation="include">
        </childnode>
        <childnode refid="1075" relation="include">
        </childnode>
        <childnode refid="1076" relation="include">
        </childnode>
        <childnode refid="1077" relation="include">
        </childnode>
        <childnode refid="1078" relation="include">
        </childnode>
        <childnode refid="1079" relation="include">
        </childnode>
        <childnode refid="1080" relation="include">
        </childnode>
        <childnode refid="1072" relation="include">
        </childnode>
        <childnode refid="1081" relation="include">
        </childnode>
        <childnode refid="1068" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1093">
        <label>MainServer/GameCharacter/CPlayer.h</label>
        <link refid="CPlayer_8h"/>
        <childnode refid="1094" relation="include">
        </childnode>
        <childnode refid="1098" relation="include">
        </childnode>
        <childnode refid="1095" relation="include">
        </childnode>
        <childnode refid="1096" relation="include">
        </childnode>
        <childnode refid="1099" relation="include">
        </childnode>
      </node>
      <node id="1095">
        <label>MainServer/CClient.h</label>
        <link refid="CClient_8h_source"/>
        <childnode refid="1094" relation="include">
        </childnode>
        <childnode refid="1096" relation="include">
        </childnode>
      </node>
      <node id="1098">
        <label>MainServer/GameCharacter/CParty.h</label>
        <link refid="CParty_8h_source"/>
        <childnode refid="1093" relation="include">
        </childnode>
        <childnode refid="1096" relation="include">
        </childnode>
      </node>
      <node id="1096">
        <label>MainServer/CServer.h</label>
        <link refid="MainServer_2CServer_8h_source"/>
        <childnode refid="1097" relation="include">
        </childnode>
      </node>
      <node id="1099">
        <label>MainServer/Map/CTile.h</label>
        <link refid="CTile_8h_source"/>
        <childnode refid="1100" relation="include">
        </childnode>
      </node>
      <node id="1097">
        <label>MainServer/Socket/CClientSocket.h</label>
        <link refid="CClientSocket_8h_source"/>
      </node>
      <node id="1094">
        <label>MainServer/Socket/CDBSocket.h</label>
        <link refid="CDBSocket_8h_source"/>
        <childnode refid="1095" relation="include">
        </childnode>
      </node>
      <node id="1100">
        <label>MainServer/Map/CMap.h</label>
        <link refid="CMap_8h_source"/>
        <childnode refid="1096" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classCPlayer" prot="public">CPlayer</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="CPlayer_8h_1ac2937dbb016e4437d5968d8d0aa230ad" prot="public" static="no">
        <name>GEAR_NUM</name>
        <initializer>26</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="MainServer/GameCharacter/CPlayer.h" line="16" column="9" bodyfile="MainServer/GameCharacter/CPlayer.h" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="CPlayer_8h_1afe2cd4d1aad191fa9c2f5f1ae8b49a43" prot="public" static="no">
        <name>GEAR_VISIBLE_NUM</name>
        <initializer>9</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="MainServer/GameCharacter/CPlayer.h" line="17" column="9" bodyfile="MainServer/GameCharacter/CPlayer.h" bodystart="17" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="CPlayer_8h_1a401c15f3b5c7d232655b93b97a8e205c" prot="public" static="no">
        <type>std::map&lt; int, CPlayer * &gt;</type>
        <definition>typedef std::map&lt;int, CPlayer*&gt; PlayerMap</definition>
        <argsstring></argsstring>
        <name>PlayerMap</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="MainServer/GameCharacter/CPlayer.h" line="211" column="1" bodyfile="MainServer/GameCharacter/CPlayer.h" bodystart="211" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="CPlayer_8h_1a95e356a0c9bccaf0fdc0423d7a34de13" prot="public" static="no">
        <type>std::list&lt; CPlayer * &gt;</type>
        <definition>typedef std::list&lt;CPlayer*&gt; PlayerList</definition>
        <argsstring></argsstring>
        <name>PlayerList</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="MainServer/GameCharacter/CPlayer.h" line="212" column="1" bodyfile="MainServer/GameCharacter/CPlayer.h" bodystart="212" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_CPLAYER_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_CPLAYER_</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstdlib&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;CCharacter.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Item/CItem.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;CMonster.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;CParty.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GEAR_NUM<sp/>26</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GEAR_VISIBLE_NUM<sp/>9</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">CPlayer:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/>CCharacter</highlight></codeline>
<codeline lineno="20"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m_nCID;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m_nAID;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m_nPID;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>WORD<sp/>m_wPUPoint,<sp/></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_wSUPoint;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/>WORD<sp/>m_wContribute;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m_nAnger;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>__int64<sp/>m_n64Exp;</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/>WORD<sp/>m_wStr,</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_wHth,</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_wInt,</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_wWis,</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_wDex;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>BYTE<sp/>m_byLevel;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>WORD<sp/>m_wDefense;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>BYTE<sp/>m_byAbsorb;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/>BYTE<sp/>m_byGrade;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>m_szGuildName;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>BYTE<sp/>m_byGRole;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>m_szName;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>BYTE<sp/>m_byJob;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>BYTE<sp/>m_byFace,</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m_byHair;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>m_szGuildClass;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m_nGID;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/>BYTE<sp/>m_byFlag;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m_nFlagItem;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m_nHonorGrade;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m_nHonorOption;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m_nOnTeleportX;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m_nOnTeleportY;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>__int64<sp/>m_n64WearState;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m_Gear[GEAR_NUM];</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>WORD<sp/>m_GearIndex[GEAR_VISIBLE_NUM];</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>BYTE<sp/>m_byTrigramLevel;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/>BYTE<sp/>m_byShortcutState;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m_nPartyID;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>m_nPartyInviterID;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>ItemMap<sp/>m_mItem;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>std::mutex<sp/>m_mxItem;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::map&lt;int,<sp/>CPlayer*&gt;<sp/>g_mPlayer;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::mutex<sp/>g_mxPlayer;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>CPlayer(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nCID,<sp/>D2S_LOADPLAYER_DESC&amp;<sp/>desc);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>~CPlayer();</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Add(CPlayer<sp/>*pPlayer);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Remove(CPlayer<sp/>*pPlayer);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>TickAll();</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remember<sp/>to<sp/>call<sp/>m_Access.Release()<sp/>after<sp/>usage</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CPlayer*<sp/>FindPlayer(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nID);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>CPlayer*<sp/>FindPlayerByName(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*szName);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>GetAID()</highlight><highlight class="keyword"><sp/>const<sp/><sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_nAID;<sp/>}</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>GetPID()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_nPID;<sp/>}</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>GetCID()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_nCID;<sp/>}</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>WORD<sp/>GetStr()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_wStr<sp/>+<sp/>m_wStrAdd;<sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>WORD<sp/>GetHth()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_wHth<sp/>+<sp/>m_wHthAdd;<sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>WORD<sp/>GetInt()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_wInt<sp/>+<sp/>m_wIntAdd;<sp/>}</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/>WORD<sp/>GetWis()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_wWis<sp/>+<sp/>m_wWisAdd;<sp/>}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/>WORD<sp/>GetAgi()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_wDex<sp/>+<sp/>m_wDexAdd;<sp/>}</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>WORD<sp/>GetPUPoint()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_wPUPoint;<sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>WORD<sp/>GetSUPoint()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_wSUPoint;<sp/>}</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>WORD<sp/>GetContribute()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_wContribute;<sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>GetAnger()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_nAnger;<sp/>}</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>BYTE<sp/>GetLevel()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_byLevel;<sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>WORD<sp/>GetHit()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>WORD<sp/>GetDodge()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>WORD<sp/>GetDefense()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_wDefense;<sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>BYTE<sp/>GetAbsorb()</highlight><highlight class="keyword"><sp/>const<sp/>override<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_byAbsorb;<sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/>DWORD<sp/>GetMaxHP()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>WORD<sp/>GetMaxMP()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/>WORD<sp/>GetMinAttack()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>WORD<sp/>GetMaxAttack()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/>WORD<sp/>GetMinMagic()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>WORD<sp/>GetMaxMagic()<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>WORD<sp/>GetResist(BYTE<sp/>byResist)<sp/></highlight><highlight class="keyword">const<sp/>override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>__int64<sp/>GetExp()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_n64Exp;<sp/>}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>BYTE<sp/>GetGrade()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_byGrade;<sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>GetGuildName()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_szGuildName;<sp/>}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>GetGuildClass()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_szGuildClass;<sp/>}</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>GetGID()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_nGID;<sp/>}</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>BYTE<sp/>GetGRole()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_byGRole;<sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>GetName()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_szName;<sp/>}</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>BYTE<sp/>GetSpecialty()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_byJob;<sp/>}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>BYTE<sp/>GetHair()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_byHair;<sp/>}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>BYTE<sp/>GetFace()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_byFace;<sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>BYTE<sp/>GetFlag()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_byFlag;<sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>GetFlagItem()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_nFlagItem;<sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>GetHonorGrade()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_nHonorGrade;<sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>GetHonorOption()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_nHonorOption;<sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/>BYTE<sp/>GetTrigramLevel()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_byTrigramLevel;<sp/>}</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>GetGear(BYTE<sp/>byType)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_Gear[byType];<sp/>}</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnPutOnGear(CItem<sp/>*pItem);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnPutOffGear(CItem<sp/>*pItem);</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsWState(__int64<sp/>n64WState)</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_n64WearState<sp/>&amp;<sp/>(1<sp/>&lt;&lt;<sp/>n64WState);<sp/>}</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//bool<sp/>IsAnyTrigramState()<sp/>const<sp/>{<sp/>return<sp/>IsWState(WS_TRIGRAM1)<sp/>||<sp/>IsWState(WS_TRIGRAM2)<sp/>||<sp/>IsWState(WS_TRIGRAM3)<sp/>||<sp/>IsWState(WS_TRIGRAM4)<sp/>||<sp/>IsWState(WS_TRIGRAM5)<sp/>||<sp/>IsWState(WS_TRIGRAM6)<sp/>||<sp/>IsWState(WS_TRIGRAM7)<sp/>||<sp/>IsWState(WS_TRIGRAM8);<sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsAnyTrigramState()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_n64WearState<sp/>&amp;<sp/>(((__int64)0xFF)<sp/>&lt;&lt;<sp/>WS_TRIGRAM1);<sp/>}</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>IsAllTrigramState()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(BYTE)(m_n64WearState<sp/>&gt;&gt;<sp/>WS_TRIGRAM1)<sp/>==<sp/>0xFF;<sp/>}</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AddWState(__int64<sp/>n64WState)<sp/>{<sp/>m_n64WearState<sp/>|=<sp/>(1<sp/>&lt;&lt;<sp/>n64WState);<sp/>}</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SubWState(__int64<sp/>n64WState)<sp/>{<sp/>m_n64WearState<sp/>&amp;=<sp/>~(1<sp/>&lt;&lt;<sp/>n64WState);<sp/>}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>WORD<sp/>GetReqPU(BYTE<sp/>*byStats);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>WriteAll(BYTE<sp/>byType,<sp/>...);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Write(BYTE<sp/>byType,<sp/>...);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SendPacket(Packet&amp;<sp/>packet);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/>Packet<sp/>GenerateCreatePacket(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bHero=</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/>Packet<sp/>GeneratePetPacket();</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/>Packet<sp/>GenerateDeletePacket();</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/>Packet<sp/>GenerateMovePacket(BYTE<sp/>byType,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>byX,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>byY,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>byZ);</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Process(Packet<sp/>packet);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>Tick();</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnLoadPlayer();</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnLoadItems(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*p);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GameStart();</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>GameRestart();</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>CanMove();</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnMove(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>byX,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>byY,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>byZ,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>byType);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Rest(BYTE<sp/>byType);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ProcessMsg(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>szMsg);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ChatCommand(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>szCommand);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>UpdateProperty(BYTE<sp/>byProperty,<sp/>__int64<sp/>n64Amount);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Teleport(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nX,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nZ=0);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OnTeleport(BYTE<sp/>byAnswer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nZ);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>InsertItem(WORD<sp/>wIndex,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nNum=1,<sp/>BYTE<sp/>byLogType=TL_CREATE,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bOwn=</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bForceSingular=</highlight><highlight class="keyword">false</highlight><highlight class="normal">,<sp/>BYTE<sp/>byPrefix=0,<sp/>BYTE<sp/>byXAttack=0,<sp/>BYTE<sp/>byXMagic=0,<sp/>BYTE<sp/>byXHit=0,<sp/>BYTE<sp/>byEBlow=0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nInfo=0,<sp/>BYTE<sp/>byXDodge=0,<sp/>BYTE<sp/>byXDefense=0,<sp/>FUSION_DESC*<sp/>pFuse=NULL,<sp/>BYTE<sp/>byShot=0,<sp/>WORD<sp/>wPerforation=0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nGongLeft=0,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nGongRight=0);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>MergeItem(WORD<sp/>wIndex,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nNum,<sp/>BYTE<sp/>byLogType=TL_CREATE,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>bOwn=</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>UseItem(CItem<sp/>*pItem);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PutOnItem(CItem<sp/>*pItem);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PutOffItem(CItem<sp/>*pItem);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Damage(CCharacter<sp/>*pAttacker,<sp/>DWORD&amp;<sp/>dwDamage,<sp/>BYTE&amp;<sp/>byType)<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Die()<sp/></highlight><highlight class="keyword">override</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Revival();</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Attack(CCharacter<sp/>*pTarget);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remember<sp/>not<sp/>to<sp/>call<sp/>m_Access.Release<sp/>if<sp/>method<sp/>returns<sp/>false.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>RemoveItem(CItem<sp/>*pItem,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nNum=0,<sp/>BYTE<sp/>byLogType=TL_DELETE);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RemoveItem(WORD<sp/>wIndex,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nNum=0,<sp/>BYTE<sp/>byLogType=TL_DELETE);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SaveAllProperty();</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SendProperty();</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ApplySpec(CItem<sp/>*pItem);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>FreeSpec(CItem<sp/>*pItem);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Party</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>GetPartyID()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_nPartyID;<sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetPartyID(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nID)<sp/>{<sp/>m_nPartyID<sp/>=<sp/>nID;<sp/>}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SetPartyInviterID(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nID)<sp/>{<sp/>m_nPartyInviterID<sp/>=<sp/>nID;<sp/>}</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/>GetPartyInviterID()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_nPartyInviterID;<sp/>}</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>HasParty()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>m_nPartyID<sp/>&gt;<sp/>0;<sp/>}</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>AskParty(CPlayer<sp/>*pPlayer);</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>LeaveParty();</highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>RemoveAggro();</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Item<sp/>Map</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>IntoInven(CItem*<sp/>pItem);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>OutofInven(CItem*<sp/>pItem);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>EmptyInven();</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Remember<sp/>to<sp/>call<sp/>m_Access.Release()<sp/>on<sp/>found<sp/>item.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/>CItem*<sp/>FindItem(WORD<sp/>wIndex,<sp/>BYTE<sp/>byOwn=IFO_ANY);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>CItem*<sp/>FindItemByIID(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nIID);</highlight></codeline>
<codeline lineno="209"><highlight class="normal">};</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::map&lt;int,<sp/>CPlayer*&gt;<sp/>PlayerMap;</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>std::list&lt;CPlayer*&gt;<sp/>PlayerList;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="MainServer/GameCharacter/CPlayer.h"/>
  </compounddef>
</doxygen>
